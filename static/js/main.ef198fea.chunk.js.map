{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","api.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","PropTypes","string","isRequired","movies","map","movie","key","imdbId","FindMovie","addMovie","useState","setTitle","setMovie","errorMessage","setErrorMessage","onSubmit","event","preventDefault","some","existingMovie","htmlFor","type","id","name","placeholder","ClassNames","value","onChange","target","onClick","fetch","then","response","json","getMovie","newMovie","Title","Plot","Poster","imdbID","catch","err","console","warn","message","disabled","defaultProps","App","data","setMovies","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ef198fea.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nexport const MovieCardShape = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.propTypes = MovieCardShape;\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ClassNames from 'classnames';\nimport './FindMovie.scss';\n\nimport { MovieCard, MovieCardShape } from '../MovieCard';\nimport { getMovie } from '../../api';\n\nexport const FindMovie = ({ addMovie, movies }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const onClick = () => {\n    if (!title) {\n      setErrorMessage('Please enter movie title');\n\n      return;\n    }\n\n    getMovie(title)\n      .then((newMovie) => {\n        if (!newMovie.Title) {\n          setErrorMessage('There is no such movie');\n          setMovie(null);\n\n          return;\n        }\n\n        setMovie({\n          title: newMovie.Title,\n          description: newMovie.Plot,\n          imgUrl: newMovie.Poster,\n          imdbUrl: `https://www.imdb.com/title/${newMovie.imdbID}/`,\n          imdbId: newMovie.imdbID,\n        });\n      })\n      .catch(err => (\n        // eslint-disable-next-line no-console\n        console.warn('Error:', err.message)\n      ));\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n\n    if (movies.some(existingMovie => (\n      existingMovie.imdbId === movie.imdbId\n    ))) {\n      setErrorMessage('This movie already exists in the list');\n\n      return;\n    }\n\n    addMovie(movie);\n    setTitle('');\n    setMovie(null);\n    setErrorMessage(null);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={onSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              name=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={ClassNames('input', {\n                'is-danger': errorMessage,\n              })}\n              value={title}\n              onChange={(event) => {\n                setTitle(event.target.value);\n                setErrorMessage(null);\n              }}\n            />\n          </div>\n\n          {errorMessage && (\n            <p className=\"help is-danger\">\n              {errorMessage}\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={onClick}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n              disabled={!movie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && (\n          <MovieCard {...movie} />\n        )}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n  movies: PropTypes.arrayOf(\n    PropTypes.shape(MovieCardShape),\n  ),\n};\n\nFindMovie.defaultProps = {\n  movies: [],\n};\n","const BASE_URL = 'http://www.omdbapi.com';\nconst KEY = '94797de1';\n\nexport const getMovie = title => (\n  fetch(`${BASE_URL}/?apikey=${KEY}&t=${title}`)\n    .then(response => response.json())\n);\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  const addMovie = (newMovie) => {\n    setMovies(prevMovies => [...prevMovies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovie={addMovie}\n          movies={movies}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}